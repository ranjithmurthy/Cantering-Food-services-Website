@using AutomatedTellerMachine.Models
@model AutomatedTellerMachine.Models.UserFeedbackViewModel

@{
    ViewBag.Title = "Feedback Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<SelectListItem> listItems = new List<SelectListItem>()
    {
        new SelectListItem
        {
            Text = "Excellent",
            Value = "Excellent"
        },

        new SelectListItem
        {
            Text = "Good",
            Value = "Good"
        }
        ,
        new SelectListItem
        {
            Text = "Average",
            Value = "Average"
        },
        new SelectListItem
        {
            Text = "Poor",
            Value = "Poor"
        },
        new SelectListItem
        {
            Text = "Fair",
            Value = "Fair"
        }
    };
}


<h2>User Feedback</h2>

@using (Html.BeginForm("Select", "FeedBack", FormMethod.Post, new { StartDate = "StartDate", EndDate = "EndDate", Description = "Description", UserAnswerCollection = new { UserAnswerid = "UserAnswerid", Answer = "Answer" } }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(modelItem => modelItem.SurveyId)
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <table class="table">
            <tr>
                <th>
                    @Html.Label("Question")
                </th>
                <th>
                    @Html.Label("Answer")
                </th>

                <th></th>
            </tr>

            @foreach (UserAnswerViewModel item in Model.UserAnswerCollection)
            {
                <tr>
                    <td>

                        @Html.HiddenFor(modelItem => item.UserAnswerid)

                        @Html.DisplayFor(modelItem => item.Question)
                    </td>
                    <td>
                       

                        @Html.DropDownList("QuestionDropDownlist:"+item.UserAnswerid, listItems, "-- Select Status --", new { @class = "form-control" })
                    </td>

                </tr>
            }

        </table>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
